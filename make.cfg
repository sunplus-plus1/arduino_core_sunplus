# set V=1 (eg, "make V=1") to print the full commands etc.
ifneq ($V,1)
 Pecho=@echo
 P=@
else
 Pecho=@:
 P=
endif


ifeq ($(CHIP),Q645)
VARIANTS_PATH = $(TOP)/variants/sp645_evb
CHIPDIRS	  = sp645
CCFLAGS 	  += -DSP645
else ifeq ($(CHIP),SP7350)
VARIANTS_PATH = $(TOP)/variants/sp7350_evb
CHIPDIRS	  = sp7350
CCFLAGS 	  += -DSP7350
else
VARIANTS_PATH = $(TOP)/variants/sp7021_evb
CHIPDIRS	  = sp7021
CCFLAGS 	  += -DSP7021
endif

################################################################################
# Toolchains
################################################################################

ifneq ($(CHIP),Q628)
GCC_TOOLCHAIN := $(TOP)/../../crossgcc/gcc-arm-none-eabi-10-2020-q4-major/bin/arm-none-eabi-
else
GCC_TOOLCHAIN := $(TOP)/../../crossgcc/gcc-arm-9.2-2019.12-x86_64-arm-none-eabi/bin/arm-none-eabi-
endif

GCC     := $(GCC_TOOLCHAIN)gcc
CXX     := $(GCC_TOOLCHAIN)g++
LD      := $(GCC_TOOLCHAIN)ld
CPP     := $(GCC_TOOLCHAIN)cpp
OBJCOPY := $(GCC_TOOLCHAIN)objcopy
OBJDUMP := $(GCC_TOOLCHAIN)objdump
READELF := $(GCC_TOOLCHAIN)readelf
AR      := $(GCC_TOOLCHAIN)ar

################################################################################
# compile flags
################################################################################

# Flags For C++ Only
COMMON_FLAGS = -MMD -std=gnu++14 -ffunction-sections -fdata-sections -fno-use-cxa-atexit
ifneq ($(CHIP),Q628)
CXXFLAGS = -mthumb -mcpu=cortex-m4 -mfloat-abi=hard -mfpu=fpv4-sp-d16 -c -Os -w  -fno-threadsafe-statics --param max-inline-insns-single=500 -fno-rtti -fno-exceptions -fno-use-cxa-atexit
CXXFLAGS += $(COMMON_FLAGS)
else
CXXFLAGS += $(COMMON_FLAGS)
CXXFLAGS +=  -O1
CXXFLAGS += -fno-pie -fno-PIE -fno-pic -fno-PIC -fno-partial-inlining -fno-jump-tables
CXXFLAGS += -Wall -march=armv5te -Wno-unused-function -Wno-unused-variable
CXXFLAGS += -funsigned-char -funsigned-bitfields -w
endif

# Flags For C Only
ifneq ($(CHIP),Q628)
CFLAGS += -nostartfiles -mthumb -mcpu=cortex-m4 -mfloat-abi=hard -mfpu=fpv4-sp-d16
CFLAGS += -MMD -O3
CFLAGS += -fstrict-aliasing -Wstrict-aliasing -Wno-error=address-of-packed-member
else
CFLAGS += -nostartfiles -std=gnu11 -MMD -O1
CFLAGS += -fno-pie -fno-PIE -fno-pic -fno-PIC -fno-partial-inlining -fno-jump-tables
CFLAGS += -Wall -march=armv5te -Wno-unused-function -Wno-unused-variable
CFLAGS += -funsigned-char -funsigned-bitfields -fshort-enums -w
endif

# Linker setup
LDFLAGS = -T $(VARIANTS_PATH)/ldscript.ld --specs=rdimon.specs  -lrdimon  -Xlinker  -Map=$(BIN)/$(TARGET).map
ifneq ($(CHIP),Q628)
LDFLAGS +=  -specs=nano.specs
else
LDFLAGS +=  -L $(shell dirname `$(GCC) -print-libgcc-file-name`) -L $(shell dirname `$(GCC) -print-file-name=libc.a`)
endif
LDFLAGS_END =  -lstdc++ -lm -lc -lgcc -Wl,--gc-sections

# get ld address from linux/kernel/.../dts
ifeq ($(CHIP),Q628)
LINUX_DTS_PATH=../../linux/kernel/arch/arm/boot/dts/sp7021-common.dtsi
else
LINUX_DTS_PATH=../../linux/kernel/arch/arm64/boot/dts/sunplus/q645-ev.dts
endif
LD_DTS_DATA_TEMP1=$(shell sed -n -e '/rproc_0_reserved:/,/reg/p' $(LINUX_DTS_PATH) | sed -n -e '/reg/p')
LD_DTS_DATA_TEMP2=$(shell echo "$(LD_DTS_DATA_TEMP1)" | sed -n 's/^.*\([0-9a-fA-F]\{8\}\).*$$/\1/p' )
LD_RUN_ADDRESS=0x$(LD_DTS_DATA_TEMP2)
CFLAGS += -DLD_RUN_ADDRESS=$(LD_RUN_ADDRESS)

ifeq ($(CHIP),SP7350)
LD_RUN_ADDRESS=0x2000000
CFLAGS += -DLD_RUN_ADDRESS=$(LD_RUN_ADDRESS)
endif
